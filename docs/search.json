[{"path":"/articles/auto-annotation.html","id":"reference-based-tools","dir":"Articles","previous_headings":"","what":"Reference based tools","title":"Automatic cell-type annotation","text":"SingleR, Celaref CellFunTopic need reference data perform automatic cell-type annotation.","code":"SeuratObj <- AutoAnnotate_SingleR(SeuratObj, ref, ref_type = \"single-cell\") result <- AutoAnnotate_Celaref(SeuratObj, counts_ref, cellinfo_ref) result <- CellFunTopic::predictFun(SeuratObj, reference_SeuratObj)"},{"path":"/articles/auto-annotation.html","id":"marker-based-tools","dir":"Articles","previous_headings":"","what":"Marker based tools","title":"Automatic cell-type annotation","text":"scCATCH, Garnett CellAssign need marker genes perform automatic cell-type annotation. Please view help document functions required format marker genes, ?AutoAnnotate_scCATCH.","code":"result <- AutoAnnotate_scCATCH(SeuratObj, marker_custom) SeuratObj <- AutoAnnotate_Garnett(SeuratObj, marker_file_path, gene_id_type, species = 'Ath') SeuratObj <- AutoAnnotate_CellAssign(SeuratObj, marker_list)"},{"path":"/articles/functional_annotation.html","id":"gene-set-enrichment-analysis-gsea","dir":"Articles","previous_headings":"","what":"Gene Set Enrichment Analysis (GSEA)","title":"Functional annotation","text":"","code":"library(scPlant) SeuratObj <- RunGSEA_plant(SeuratObj, by = 'GO', GeneIDtype = 'TAIR', minpct = 0.25)"},{"path":"/articles/functional_annotation.html","id":"visualize-the-gsea-result","dir":"Articles","previous_headings":"Gene Set Enrichment Analysis (GSEA)","what":"Visualize the GSEA result","title":"Functional annotation","text":"Refer https://compbioNJU.github.io/CellFunTopic visualization GSEA result.","code":"library(CellFunTopic) pathway_unique_shared(SeuratObj, by = \"GO\", fontsize_row = 4, scale = \"row\") hierarchyplot_tree(SeuratObj, by = \"GO\", topaths = 4, cluster_cutree_k = 14, pathway_cutree_k = 14,                    vertex.label.cex=0.5, edge.max.width=1, vertex.size.cex=0.7)"},{"path":"/articles/functional_annotation.html","id":"topic-modelling","dir":"Articles","previous_headings":"","what":"Topic modelling","title":"Functional annotation","text":"","code":"SeuratObj <- runLDA(SeuratObj, k = 23)"},{"path":"/articles/functional_annotation.html","id":"visualize-the-topic-modelling-result","dir":"Articles","previous_headings":"Topic modelling","what":"Visualize the topic modelling result","title":"Functional annotation","text":"Refer https://compbioNJU.github.io/CellFunTopic visualization topic modelling result.","code":"ldaOut <- SeuratObj@misc$ldaOut betaDF <- tidytext::tidy(ldaOut, matrix = \"beta\") pws <- ID2Description(SeuratObj, by = \"GO\") betaDF <- dplyr::mutate(betaDF, descrip=unname(pws[term])) gammaDF <- tidytext::tidy(ldaOut, matrix = \"gamma\") cluster_topic_hmp(ldaOut) plot_sankey(gammaDF, topn=1, plotHeight = 600) topicNW3(betaDF, topn=10, pws = pws) topicProb(SeuratObj, topic=21, pointSize=0.1) + Seurat::NoAxes() Topterms_Topic(betaDF, Topic = 21, topn = 20) cosine_network_term(SeuratObj, radius = 0.2)"},{"path":"/articles/integration.html","id":"cross-species-integration","dir":"Articles","previous_headings":"","what":"Cross-species integration","title":"Cross-species integration","text":"Multiple expression matrices can provided, long parameter species specified. finally got integrated Seurat object integratedObj, can perform downstream analysis .","code":"integratedObj <- crossSpecies_integrate(matrices = list(example_Ath, example_Osa, example_Zma),                                          species = c('Ath', 'Osa', 'Zma'), resolution = 0.5) Seurat::DefaultAssay(integratedObj) <- 'SCT' dim(integratedObj) ## [1] 4190 4578"},{"path":"/articles/integration.html","id":"visualize-integration-result","dir":"Articles","previous_headings":"","what":"Visualize integration result","title":"Cross-species integration","text":"Bar plot showing percentage cells different species:","code":"Seurat::DimPlot(integratedObj, reduction = \"umap\", group.by = \"species\") + Seurat::NoAxes() Seurat::DimPlot(integratedObj, reduction = \"umap\", group.by = \"seurat_clusters\", label = F,                 repel = TRUE, split.by = \"species\") + Seurat::NoAxes() species_percentage(integratedObj, group_by = 'seurat_clusters')"},{"path":[]},{"path":"/articles/paired_motif_enrichment.html","id":"download-databases-and-scripts","dir":"Articles","previous_headings":"Download and installation","what":"Download databases and scripts","title":"Paired Motif Enrichment","text":"required databases scripts perform Paired Motif Enrichment analysis can downloaded .","code":"# Download in linux system: wget https://biobigdata.nju.edu.cn/scPlantDB/scPlantData.zip unzip scPlantData.zip cd scPlantData"},{"path":"/articles/paired_motif_enrichment.html","id":"download-genome-files","dir":"Articles","previous_headings":"Download and installation","what":"Download genome files","title":"Paired Motif Enrichment","text":"Please download genome gff3 files suitable scRNA-seq data. already files, please copy path scPlantData/PMET/. example, download Arabidopsis thaliana’s TAIR10 genome gff3: Users can download plant organism’s genome gff3 files EnsemblPlants Phytozome. example, download Zea mays’s Zm-B73-REFERENCE-NAM-5.0 genome gff3:","code":"# To make the program works, we recommend downloading the files to the directory scPlantData/PMET/ wget -O PMET/arabidopsis_thaliana.fa.gz 'https://ftp.ensemblgenomes.ebi.ac.uk/pub/plants/release-55/fasta/arabidopsis_thaliana/dna/Arabidopsis_thaliana.TAIR10.dna.toplevel.fa.gz' wget -O PMET/arabidopsis_thaliana.gff3.gz 'https://ftp.ensemblgenomes.ebi.ac.uk/pub/plants/release-55/gff3/arabidopsis_thaliana/Arabidopsis_thaliana.TAIR10.55.gff3.gz' gunzip PMET/arabidopsis_thaliana.fa.gz gunzip PMET/arabidopsis_thaliana.gff3.gz wget -O PMET/zea_mays.fa.gz 'https://ftp.ensemblgenomes.ebi.ac.uk/pub/plants/release-55/fasta/zea_mays/dna/Zea_mays.Zm-B73-REFERENCE-NAM-5.0.dna.toplevel.fa.gz' wget -O PMET/zea_mays.gff3.gz 'https://ftp.ensemblgenomes.ebi.ac.uk/pub/plants/release-55/gff3/zea_mays/Zea_mays.Zm-B73-REFERENCE-NAM-5.0.55.gff3.gz' gunzip PMET/zea_mays.fa.gz gunzip PMET/zea_mays.gff3.gz"},{"path":"/articles/paired_motif_enrichment.html","id":"install-dependent-softwares","dir":"Articles","previous_headings":"Download and installation","what":"Install dependent softwares","title":"Paired Motif Enrichment","text":"Please make sure several dependent softwares installed, including samtools, bedtools, meme, parallel.","code":""},{"path":[]},{"path":"/articles/paired_motif_enrichment.html","id":"help-information","dir":"Articles","previous_headings":"Paired Motif Enrichment analysis","what":"Help information:","title":"Paired Motif Enrichment","text":"","code":"bash RunPMET.sh -h USAGE: RunPMET [options] Perform Paired Motif Enrichment Test.  -r <PMET_path>  : Full path of directory where PMET scripts exist. Required. -o <output_directory> : Output directory for results. -m <gene_inputs>        : File containing genes to be tested. Required. A 2 column tab-delimited text file containing cluster ID in column 1 and genes in column 2. -s <species>  : Species. currently At (Arabidopsis thaliana), Os (Oryza sativa), Zm (Zea mays) are supported."},{"path":"/articles/paired_motif_enrichment.html","id":"prepare-gene-input-file","dir":"Articles","previous_headings":"Paired Motif Enrichment analysis","what":"Prepare gene input file","title":"Paired Motif Enrichment","text":"Take true scRNA-seq data Arabidopsis thaliana (Zhang et al., 2019) example data (download ), can use R codes prepare gene input file:","code":"library(dplyr) DEG <- SeuratObj@misc$topMarker %>% dplyr::filter((pct.1>pct.2) & (p_val <0.05) & (pct.1>0.25) & avg_logFC>0.25) %>% dplyr::select(cluster, gene) write.table(DEG, file = \"DEG.txt\", quote = F, sep = \"\\t\", row.names = F, col.names = F)"},{"path":"/articles/paired_motif_enrichment.html","id":"run-the-script","dir":"Articles","previous_headings":"Paired Motif Enrichment analysis","what":"Run the script","title":"Paired Motif Enrichment","text":"Note: Running shell script time-consuming, particularly step 2. program run successfully, can find result files output directory output/output.txt.","code":"source RunPMET.sh -r ./PMET -o output -m DEG.txt -s At"},{"path":"/articles/paired_motif_enrichment.html","id":"process-the-result-and-visualization","dir":"Articles","previous_headings":"","what":"Process the result and visualization","title":"Paired Motif Enrichment","text":"Pre-process original PMET output： Heatmap PMET result：  Draw triangle heatmap PMET result:  Network diagram showing top pairs cluster:","code":"library(scPlant) PMETresult <- processPMET(\"output/output.txt\") PMEThmp(PMETresult, topn = 5) triHmp(PMETresult, clus = unique(PMETresult$Module)[1]) topPairsNet(PMETresult, clus = unique(PMETresult$Module)[1], topn = 20)"},{"path":"/articles/pre-processing.html","id":"load-in-the-data","dir":"Articles","previous_headings":"","what":"Load in the data","title":"Pre-processing","text":"CellFunTopic allows various types input, including CellRanger outputs, raw gene expression matrix, popular R objects used single cell analysis SingleCellExperiment, Seurat, CellDataSet. CellFunTopic transform different input data Seurat object. Let us use randomly generated tiny single-cell expression matrix Arabidopsis thaliana toy example. can also take CellRanger outputs input, example:","code":"library(scPlant) dim(example_Ath) # an internal example data of scPlant ## [1] 7000 2000 SeuratObj <- readData(data = example_Ath,                        type = 'expMatrix',                        species = \"Arabidopsis thaliana\") SeuratObj <- readData(data = \"filtered_gene_bc_matrices/TAIR/\",                        type = '10X',                        species = \"Arabidopsis thaliana\")"},{"path":"/articles/pre-processing.html","id":"standard-pre-processing-workflow","dir":"Articles","previous_headings":"","what":"Standard pre-processing workflow","title":"Pre-processing","text":"can perform pre-processing conveniently. users provide pre-processed Seurat object, step can skipped.","code":"SeuratObj <- QCfun(SeuratObj) SeuratObj <- RunSeurat(SeuratObj, resolution = 0.3) unique(Seurat::Idents(SeuratObj)) # see how many clusters we got. ## [1] 1 0 3 2 5 4 6 7 ## Levels: 0 1 2 3 4 5 6 7 Seurat::DimPlot(SeuratObj, reduction = \"umap\")"},{"path":"/articles/pseudotime.html","id":"monolce2","dir":"Articles","previous_headings":"","what":"Monolce2","title":"Pseudotime trajectory inference","text":"save_plot = TRUE, output plots stored ./output/plots/RunMonocle2.","code":"result <- RunMonocle2(SeuratObj, save_plot = TRUE)"},{"path":"/articles/pseudotime.html","id":"slingshot","dir":"Articles","previous_headings":"","what":"Slingshot","title":"Pseudotime trajectory inference","text":"save_plot = TRUE, output plots stored ./output/plots/RunSlingshot.","code":"result <- RunSlingshot(SeuratObj, save_plot = TRUE)"},{"path":"/articles/regulatory_network.html","id":"download-databases-and-scripts","dir":"Articles","previous_headings":"","what":"Download databases and scripts","title":"Gene regulatory network construction","text":"required cisTarget databases scripts construct gene regulatory network can downloaded . also provide true scRNA-seq data Arabidopsis thaliana (Zhang et al., 2019) example data, download ","code":"# Download in linux system: wget https://biobigdata.nju.edu.cn/scPlantDB/scPlantData.zip unzip scPlantData.zip cd scPlantData wget https://biobigdata.nju.edu.cn/scPlantDB/SeuratObj.rds"},{"path":[]},{"path":"/articles/regulatory_network.html","id":"install-dependent-python-packages","dir":"Articles","previous_headings":"Installation","what":"Install dependent Python packages","title":"Gene regulatory network construction","text":"","code":"conda create -n pyscenic_12_1 python=3.7 conda activate pyscenic_12_1  pip install pyscenic==0.12.1 pyscenic -h pip install pandas pip install loompy"},{"path":"/articles/regulatory_network.html","id":"install-dependent-r-packages","dir":"Articles","previous_headings":"Installation","what":"Install dependent R packages","title":"Gene regulatory network construction","text":"Dependent R packages includes optparse, Seurat, SCopeLoomR, data.table, pbapply, philentropy, dplyr, installed , start “R” enter:","code":"install.packages(\"optparse\") install.packages(\"Seurat\") devtools::install_github(\"aertslab/SCopeLoomR\") install.packages(\"data.table\") install.packages(\"pbapply\") install.packages(\"philentropy\") install.packages(\"dplyr\")"},{"path":[]},{"path":"/articles/regulatory_network.html","id":"help-information","dir":"Articles","previous_headings":"Gene regulatory network construction","what":"Help information:","title":"Gene regulatory network construction","text":"","code":"bash RunGRN.sh -h USAGE: RunGRN [options] Run pyscenic and perform post-processing.  -o <output_directory> : Output directory for results. -f <Seurat_file>        : Seurat object, saved as .rds format. -s <species>  : Species. Currently At (Arabidopsis thaliana), Os (Oryza sativa), Zm (Zea mays) are supported. For other species, you need to provide your own cisTarget_databases. -t <threads> : threads. 1 as default. -d <cisTarget_databases> : directory containing files required to run pyscenic ."},{"path":"/articles/regulatory_network.html","id":"run-the-script","dir":"Articles","previous_headings":"Gene regulatory network construction","what":"Run the script","title":"Gene regulatory network construction","text":"program run successfully, can find results files output directory. can ignore output files, several ones needed visualization.","code":"source RunGRN.sh -f SeuratObj.rds -s At -t 2 -d cisTarget_databases -o output ls output # finally output files pyscenicOutput.loom  # loom file containing the original expression matrix and the calculated AUC values AUCell.txt  # Regulon activity score (RAS) matrix rasMat.rds # Regulon activity score (RAS) matrix, R object file rssMat.rds # Regulon Specificity Score (RSS) matrix tf_target.rds # TF and their targets in each regulon regulons.gmt  # regulons regulons.txt # regulons binary_mtx.txt   # binary regulon activity matrix # intermediate files adj.tsv  #  a table of TF-target genes reg.tsv  # a table of enriched motifs and target genes exprMat.loom  # loom file of expression matrix cellmeta.rds  # SeuratObj@meta.data auc_thresholds.txt  # thresholds to create binary regulon activity matrix"},{"path":"/articles/regulatory_network.html","id":"visualize-the-gene-regulatory-network","dir":"Articles","previous_headings":"","what":"Visualize the gene regulatory network","title":"Gene regulatory network construction","text":"provide various visualization tools display single-cell GRN results different ways. Load output files Seurat object: Heatmaps showing mean regulon activity TF expression cluster.  Dimension reduction plot showing regulon activity TF expression.  Network diagram showing top regulons cluster according regulon specificity score(RSS).  Network diagram showing top targets regulon according importance score.  Network diagram showing top targets top regulons cluster.  Dot plot showing top regulons cluster according regulon specificity score(RSS).","code":"library(scPlant) rasMat <- readRDS(\"output/rasMat.rds\") rssMat <- readRDS(\"output/rssMat.rds\") tf_target <- readRDS(\"output/tf_target.rds\") SeuratObj <- readRDS(\"SeuratObj.rds\") ras_exp_hmp(SeuratObj, rasMat, group.by = \"cellType\", assay = 'SCT') ras_exp_scatter(SeuratObj, rasMat, gene = 'AT1G75390', reduction = 'umap') topRegulons(rssMat, topn = 5) toptargets(tf_target, topn = 5, regulons = colnames(rasMat)[1:5]) ToptargetsofTopregulons(rssMat, tf_target, Topregulons = 5, Toptargets = 5) SpecificityRank(rssMat, cluster = 23, topn = 10)"},{"path":"/articles/scPlant.html","id":"pre-processing","dir":"Articles","previous_headings":"","what":"Pre-processing","title":"Getting Started with scPlant","text":"recommend CellFunTopic package perform data pre-processing (quality control, normalization, dimension reduction, clustering, differential expression analysis, etc.) convenience.","code":""},{"path":"/articles/scPlant.html","id":"cross-species-integration","dir":"Articles","previous_headings":"","what":"Cross-species integration","title":"Getting Started with scPlant","text":"scPlant allows cross-species integration single-cell data matched organs/tissues using one--one orthologous genes anchors.","code":""},{"path":"/articles/scPlant.html","id":"functional-annotation","dir":"Articles","previous_headings":"","what":"Functional annotation","title":"Getting Started with scPlant","text":"scPlant provides methods Gene Set Enrichment Analysis (GSEA) model plants. recommend CellFunTopic package visualize GSEA result perform topic modelling, revealing cellular programs shared across cell types exclusive particular cell type.","code":""},{"path":"/articles/scPlant.html","id":"gene-regulatory-network-construction","dir":"Articles","previous_headings":"","what":"Gene regulatory network construction","title":"Getting Started with scPlant","text":"scPlant pipeline incorporated widely used single-cell GRN analysis tool SCENIC (Aibar et al., 2017), prepared required cisTarget databases apply SCENIC plants Arabidopsis thaliana, Oryza sativa, Zea mays.","code":""},{"path":"/articles/scPlant.html","id":"paired-motif-enrichment","dir":"Articles","previous_headings":"","what":"Paired motif enrichment","title":"Getting Started with scPlant","text":"scPlant pipeline adapted Paired Motif Enrichment Tool (PMET) (Rich-Griffin et al., 2020) predict pairs TF binding motifs within promoter regions cell-type specific marker genes.","code":""},{"path":"/articles/scPlant.html","id":"automatic-cell-type-annotation","dir":"Articles","previous_headings":"","what":"Automatic cell-type annotation","title":"Getting Started with scPlant","text":"scPlant implemented several different solutions automatic cell-type annotation based popular tools, including SingleR, Garnett, scCATCH, Celaref CellAssign.","code":""},{"path":"/articles/scPlant.html","id":"estimating-the-cell-type-composition-of-bulk-samples","dir":"Articles","previous_headings":"","what":"Estimating the cell type composition of bulk samples","title":"Getting Started with scPlant","text":"scPlant helps estimating cell type composition bulk samples using single cell reference. Cell-type deconvolution implemented based CIBERSORT algorithm.","code":""},{"path":"/articles/scPlant.html","id":"pseudotime-trajectory-inference","dir":"Articles","previous_headings":"","what":"Pseudotime trajectory inference","title":"Getting Started with scPlant","text":"scPlant offers convenient implementation pseudotime trajectory inference incorporating two public tools, Monocle Slingshot.","code":""},{"path":"/articles/scPlant.html","id":"explore-in-built-in-shiny-app","dir":"Articles","previous_headings":"","what":"Explore in Built-in Shiny APP","title":"Getting Started with scPlant","text":"gene regulatory network, differentially expressed genes, functional annotation can explored interactively built-Shiny web application.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shanni Cao. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cao S (2023). scPlant: Versatile Framework Single-cell Transcriptomic Data Analysis Plants.. R package version 0.0.0.9000, https://github.com/compbioNJU/scPlant.","code":"@Manual{,   title = {scPlant: A Versatile Framework for Single-cell Transcriptomic Data Analysis in Plants.},   author = {Shanni Cao},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/compbioNJU/scPlant}, }"},{"path":"/index.html","id":"scplant","dir":"","previous_headings":"","what":"A Versatile Framework for Single-cell Transcriptomic Data Analysis in Plants.","title":"A Versatile Framework for Single-cell Transcriptomic Data Analysis in Plants.","text":"scPlant: versatile framework single-cell transcriptomic data analysis plants. scPlant pipeline implemented plentiful functions diverse analytical tasks, ranging basic data processing advanced demands cell type annotation deconvolution, trajectory inference, cross-species data integration cell-type specific gene regulatory network construction.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Versatile Framework for Single-cell Transcriptomic Data Analysis in Plants.","text":"First, install devtools (installing GitHub packages) isn’t already installed: , install scPlant:","code":"if (!requireNamespace(\"devtools\", quietly = TRUE)) install.packages(\"devtools\") devtools::install_github(\"compbioNJU/scPlant\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Versatile Framework for Single-cell Transcriptomic Data Analysis in Plants.","text":"Please see website: https://compbioNJU.github.io/scPlant","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Shanni Cao Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/AutoAnnotate_Celaref.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic annotation of Seurat object using Celaref package. — AutoAnnotate_Celaref","title":"Automatic annotation of Seurat object using Celaref package. — AutoAnnotate_Celaref","text":"Automatic annotation Seurat object using Celaref package.","code":""},{"path":"/reference/AutoAnnotate_Celaref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic annotation of Seurat object using Celaref package. — AutoAnnotate_Celaref","text":"","code":"AutoAnnotate_Celaref(SeuratObj, counts_ref, cellinfo_ref, plot = TRUE)"},{"path":"/reference/AutoAnnotate_Celaref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic annotation of Seurat object using Celaref package. — AutoAnnotate_Celaref","text":"SeuratObj Seurat object annotate counts_ref counts matrix reference data cellinfo_ref data frame cell information reference data, first column cell ID, second column cluster (\"Cluster\" column name) plot produce plots ","code":""},{"path":"/reference/AutoAnnotate_Celaref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic annotation of Seurat object using Celaref package. — AutoAnnotate_Celaref","text":"data frame prediction result","code":""},{"path":"/reference/AutoAnnotate_CellAssign.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic annotation of Seurat object using CellAssign package. — AutoAnnotate_CellAssign","title":"Automatic annotation of Seurat object using CellAssign package. — AutoAnnotate_CellAssign","text":"Automatic annotation Seurat object using CellAssign package.","code":""},{"path":"/reference/AutoAnnotate_CellAssign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic annotation of Seurat object using CellAssign package. — AutoAnnotate_CellAssign","text":"","code":"AutoAnnotate_CellAssign(SeuratObj, marker_list)"},{"path":"/reference/AutoAnnotate_CellAssign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic annotation of Seurat object using CellAssign package. — AutoAnnotate_CellAssign","text":"SeuratObj Seurat object annotate marker_list named list, names cell types entries marker genes (necessarily mutually exclusive) cell type","code":""},{"path":"/reference/AutoAnnotate_CellAssign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic annotation of Seurat object using CellAssign package. — AutoAnnotate_CellAssign","text":"Seurat object. predicted cell type label stored SeuratObj$predicted_label.","code":""},{"path":"/reference/AutoAnnotate_Garnett.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic annotation of Seurat object using Garnett package. — AutoAnnotate_Garnett","title":"Automatic annotation of Seurat object using Garnett package. — AutoAnnotate_Garnett","text":"Automatic annotation Seurat object using Garnett package.","code":""},{"path":"/reference/AutoAnnotate_Garnett.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic annotation of Seurat object using Garnett package. — AutoAnnotate_Garnett","text":"","code":"AutoAnnotate_Garnett(   SeuratObj,   marker_file_path,   gene_id_type,   species = c(\"Ath\", \"Osa\", \"Zma\") )"},{"path":"/reference/AutoAnnotate_Garnett.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic annotation of Seurat object using Garnett package. — AutoAnnotate_Garnett","text":"SeuratObj Seurat object annotate marker_file_path see https://cole-trapnell-lab.github.io/garnett/docs/ construct marker file gene_id_type gene ID type Seurat object marker file species c('Ath', 'Osa', 'Zma'). Currently three plant species supported.","code":""},{"path":"/reference/AutoAnnotate_Garnett.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic annotation of Seurat object using Garnett package. — AutoAnnotate_Garnett","text":"Seurat object. predicted cell type label stored SeuratObj$predicted_label.","code":""},{"path":"/reference/AutoAnnotate_scCATCH.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic annotation of Seurat object using scCATCH package. — AutoAnnotate_scCATCH","title":"Automatic annotation of Seurat object using scCATCH package. — AutoAnnotate_scCATCH","text":"Automatic annotation Seurat object using scCATCH package.","code":""},{"path":"/reference/AutoAnnotate_scCATCH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic annotation of Seurat object using scCATCH package. — AutoAnnotate_scCATCH","text":"","code":"AutoAnnotate_scCATCH(SeuratObj, marker_custom)"},{"path":"/reference/AutoAnnotate_scCATCH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic annotation of Seurat object using scCATCH package. — AutoAnnotate_scCATCH","text":"SeuratObj Seurat object annotate marker_custom Please refer https://raw.githack.com/ZJUFanLab/scCATCH/master/vignettes/tutorial.html build marker data.frame","code":""},{"path":"/reference/AutoAnnotate_scCATCH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic annotation of Seurat object using scCATCH package. — AutoAnnotate_scCATCH","text":"data frame prediction result","code":""},{"path":"/reference/AutoAnnotate_SingleR.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic annotation of Seurat object using SingleR package. — AutoAnnotate_SingleR","title":"Automatic annotation of Seurat object using SingleR package. — AutoAnnotate_SingleR","text":"Predict cell type Seurat object using SingleR package.","code":""},{"path":"/reference/AutoAnnotate_SingleR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic annotation of Seurat object using SingleR package. — AutoAnnotate_SingleR","text":"","code":"AutoAnnotate_SingleR(SeuratObj, ref, ref_type = c(\"bulk\", \"single-cell\"))"},{"path":"/reference/AutoAnnotate_SingleR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic annotation of Seurat object using SingleR package. — AutoAnnotate_SingleR","text":"SeuratObj Seurat object annotate ref Reference dataset, bulk RNA-seq microarray data single-cell data, SummarizedExperiment SingleCellExperiment object containing matrix log-expression values labels stored ref$label. ref_type type reference dataset, \"bulk\" (bulk RNA-seq) \"single-cell\" (single-cell data) supported.","code":""},{"path":"/reference/AutoAnnotate_SingleR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic annotation of Seurat object using SingleR package. — AutoAnnotate_SingleR","text":"Seurat object. predicted cell type label stored SeuratObj$predicted_label.","code":""},{"path":"/reference/constellationPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Constellation plot with scrattch.hicat package. — constellationPlot","title":"Draw Constellation plot with scrattch.hicat package. — constellationPlot","text":"Draw Constellation plot scrattch.hicat package.","code":""},{"path":"/reference/constellationPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Constellation plot with scrattch.hicat package. — constellationPlot","text":"","code":"constellationPlot(   SeuratObj,   cluster_label = \"cell_type\",   out.dir = \"Constellation_plots\",   k = 15,   knn.outlier.th = 2,   outlier.frac.th = 0.5 )"},{"path":"/reference/constellationPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Constellation plot with scrattch.hicat package. — constellationPlot","text":"SeuratObj Seurat object cluster_label one column SeuratObj@meta.data, used cluster annotation display plot. .dir location write plotting files k K KNN algorithm. knn.outlier.th Threshold determine nearest neighbor far outlier.frac.th Threshold determine cell outlier far away neighbors.","code":""},{"path":[]},{"path":"/reference/constellationPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Constellation plot with scrattch.hicat package. — constellationPlot","text":"","code":"if (FALSE) { SeuratObj <- pbmc3k.SeuratData::pbmc3k.final Seurat::Idents(SeuratObj) <- SeuratObj$seurat_clusters constellationPlot(SeuratObj, cluster_label = \"seurat_annotations\", out.dir = \"Constellation_plots\") }"},{"path":"/reference/crossSpecies_integrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform integration on datasets of different species with Seurat. — crossSpecies_integrate","title":"Perform integration on datasets of different species with Seurat. — crossSpecies_integrate","text":"currently integration three species Arabidopsis thaliana Oryza sativa Zea mays supported.","code":""},{"path":"/reference/crossSpecies_integrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform integration on datasets of different species with Seurat. — crossSpecies_integrate","text":"","code":"crossSpecies_integrate(   matrices,   species,   resolution = 0.5,   min.cells = 3,   min.features = 200 )"},{"path":"/reference/crossSpecies_integrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform integration on datasets of different species with Seurat. — crossSpecies_integrate","text":"matrices List single-cell expression matrices different species. species species matrices. Character vector, c('Ath', 'Osa') c('Ath', 'Osa', 'Zma'), whose order must match order matrices. word corresponds matrix. resolution resolution parameter FindClusters, use value () 1.0 want obtain larger (smaller) number communities. min.cells Filter expression matrices integration. Filter genes based minimum number cells. min.features Filter expression matrices integration. Filter cells based minimum number features.","code":""},{"path":[]},{"path":"/reference/decomposeBulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompose bulk RNA-seq samples using a single cell reference — decomposeBulk","title":"Decompose bulk RNA-seq samples using a single cell reference — decomposeBulk","text":"CIBERSORT algorithm (Newman et al. Nature Methods 12:453-457) estimating cell type composition bulk sample, given gene expression profile sample known gene expression profile cell type potentially contributing sample. , wrap runCIBERSORT function RNAMagnet R package decompose bulk RNA-seq samples. install RNAMagnet R package, see https://github.com/veltenlab/rnamagnet. Note MAGIC important requirement RNAMagnet package, needs installed python package, see https://github.com/KrishnaswamyLab/MAGIC/tree/master/Rmagic#installation.","code":""},{"path":"/reference/decomposeBulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompose bulk RNA-seq samples using a single cell reference — decomposeBulk","text":"","code":"decomposeBulk(   SeuratObj,   exprs,   meta,   mc.cores = 1,   slot = \"counts\",   assay = \"SCT\" )"},{"path":"/reference/decomposeBulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompose bulk RNA-seq samples using a single cell reference — decomposeBulk","text":"SeuratObj Seurat object. exprs data frame matrix raw read counts bulk RNA-seq samples. Column names correspond sample names, row names genes. meta data frame 2 columns Sample Class, correlate sample names sample class. mc.cores Number cores used slot slot use calculate mean expression per cell type assay assays use calculate mean expression per cell type","code":""},{"path":"/reference/decomposeBulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decompose bulk RNA-seq samples using a single cell reference — decomposeBulk","text":"data frame long format, indicating fraction cell types bulk RNA-seq sample.","code":""},{"path":"/reference/example_Ath.html","id":null,"dir":"Reference","previous_headings":"","what":"Toy example single-cell expression matrix of Arabidopsis thaliana. — example_Ath","title":"Toy example single-cell expression matrix of Arabidopsis thaliana. — example_Ath","text":"7000×2000(genes×cells) single-cell expression matrix Arabidopsis thaliana, taken toy example.","code":""},{"path":"/reference/example_Ath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toy example single-cell expression matrix of Arabidopsis thaliana. — example_Ath","text":"","code":"example_Ath"},{"path":"/reference/example_Ath.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Toy example single-cell expression matrix of Arabidopsis thaliana. — example_Ath","text":"dgCMatrix 7000×2000(genes×cells).","code":""},{"path":"/reference/example_Osa.html","id":null,"dir":"Reference","previous_headings":"","what":"Toy example single-cell expression matrix of Oryza sativa. — example_Osa","title":"Toy example single-cell expression matrix of Oryza sativa. — example_Osa","text":"7000×2000(genes×cells) single-cell expression matrix Oryza sativa, taken toy example.","code":""},{"path":"/reference/example_Osa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toy example single-cell expression matrix of Oryza sativa. — example_Osa","text":"","code":"example_Osa"},{"path":"/reference/example_Osa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Toy example single-cell expression matrix of Oryza sativa. — example_Osa","text":"dgCMatrix 7000×2000(genes×cells).","code":""},{"path":"/reference/example_Zma.html","id":null,"dir":"Reference","previous_headings":"","what":"Toy example single-cell expression matrix of Zea mays. — example_Zma","title":"Toy example single-cell expression matrix of Zea mays. — example_Zma","text":"7000×1000(genes×cells) single-cell expression matrix Zea mays, taken toy example.","code":""},{"path":"/reference/example_Zma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toy example single-cell expression matrix of Zea mays. — example_Zma","text":"","code":"example_Zma"},{"path":"/reference/example_Zma.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Toy example single-cell expression matrix of Zea mays. — example_Zma","text":"dgCMatrix 7000×1000(genes×cells).","code":""},{"path":"/reference/fractionHmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap showing the fraction of cell types in each bulk RNA-seq sample. — fractionHmp","title":"Heatmap showing the fraction of cell types in each bulk RNA-seq sample. — fractionHmp","text":"Heatmap showing fraction cell types bulk RNA-seq sample.","code":""},{"path":"/reference/fractionHmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap showing the fraction of cell types in each bulk RNA-seq sample. — fractionHmp","text":"","code":"fractionHmp(CIBER, meta)"},{"path":"/reference/fractionHmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap showing the fraction of cell types in each bulk RNA-seq sample. — fractionHmp","text":"CIBER output decomposeBulk(), data frame indicating fraction cell types bulk RNA-seq sample. meta data frame 2 columns Sample Class, correlate sample names sample class.","code":""},{"path":"/reference/load_shinyApp.html","id":null,"dir":"Reference","previous_headings":"","what":"visualize the analysis result in a built-in shiny app — load_shinyApp","title":"visualize the analysis result in a built-in shiny app — load_shinyApp","text":"visualize analysis result built-shiny app","code":""},{"path":"/reference/load_shinyApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visualize the analysis result in a built-in shiny app — load_shinyApp","text":"","code":"load_shinyApp(SeuratObj, rasMat, rssMat, tf_target)"},{"path":"/reference/load_shinyApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visualize the analysis result in a built-in shiny app — load_shinyApp","text":"SeuratObj Seurat object rasMat matrix regulon activity score(RAS) cell rssMat matrix regulon specificity score(RSS) cluster tf_target TF targets regulon. information comes post-processing pyscenic.","code":""},{"path":"/reference/load_shinyApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"visualize the analysis result in a built-in shiny app — load_shinyApp","text":"","code":"if (FALSE) { if(interactive()) {     load_shinyApp(SeuratObj, rasMat, rssMat, tf_target) } }"},{"path":"/reference/meanExpHmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap showing mean expression of top 20 markers of each cell type in each sample. — meanExpHmp","title":"Heatmap showing mean expression of top 20 markers of each cell type in each sample. — meanExpHmp","text":"Heatmap showing mean expression top 20 markers cell type sample.","code":""},{"path":"/reference/meanExpHmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap showing mean expression of top 20 markers of each cell type in each sample. — meanExpHmp","text":"","code":"meanExpHmp(SeuratObj, exprs, meta)"},{"path":"/reference/meanExpHmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap showing mean expression of top 20 markers of each cell type in each sample. — meanExpHmp","text":"SeuratObj Seurat object. exprs data frame matrix raw read counts bulk RNA-seq samples. Column names correspond sample names, row names genes. meta data frame 2 columns Sample Class, correlate sample names sample class.","code":""},{"path":"/reference/motif2TF_At.html","id":null,"dir":"Reference","previous_headings":"","what":"Correspondence between motif and transcription factor in Arabidopsis thaliana. — motif2TF_At","title":"Correspondence between motif and transcription factor in Arabidopsis thaliana. — motif2TF_At","text":"Correspondence motif transcription factor Arabidopsis thaliana.","code":""},{"path":"/reference/motif2TF_At.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correspondence between motif and transcription factor in Arabidopsis thaliana. — motif2TF_At","text":"","code":"motif2TF_At"},{"path":"/reference/motif2TF_At.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Correspondence between motif and transcription factor in Arabidopsis thaliana. — motif2TF_At","text":"named vector 1366 character.","code":""},{"path":"/reference/motif2TF_Os.html","id":null,"dir":"Reference","previous_headings":"","what":"Correspondence between motif and transcription factor in Oryza sativa. — motif2TF_Os","title":"Correspondence between motif and transcription factor in Oryza sativa. — motif2TF_Os","text":"Correspondence motif transcription factor Oryza sativa.","code":""},{"path":"/reference/motif2TF_Os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correspondence between motif and transcription factor in Oryza sativa. — motif2TF_Os","text":"","code":"motif2TF_Os"},{"path":"/reference/motif2TF_Os.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Correspondence between motif and transcription factor in Oryza sativa. — motif2TF_Os","text":"named vector 476 character.","code":""},{"path":"/reference/motif2TF_Zm.html","id":null,"dir":"Reference","previous_headings":"","what":"Correspondence between motif and transcription factor in Zea mays. — motif2TF_Zm","title":"Correspondence between motif and transcription factor in Zea mays. — motif2TF_Zm","text":"Correspondence motif transcription factor Zea mays.","code":""},{"path":"/reference/motif2TF_Zm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correspondence between motif and transcription factor in Zea mays. — motif2TF_Zm","text":"","code":"motif2TF_Zm"},{"path":"/reference/motif2TF_Zm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Correspondence between motif and transcription factor in Zea mays. — motif2TF_Zm","text":"named vector 505 character.","code":""},{"path":"/reference/orthologs_At_Os.html","id":null,"dir":"Reference","previous_headings":"","what":"One-by-one orthologous genes of rice in Arabidopsis thaliana. — orthologs_At_Os","title":"One-by-one orthologous genes of rice in Arabidopsis thaliana. — orthologs_At_Os","text":"One--one orthologous genes rice Arabidopsis thaliana, used cross-species scRNA-seq analysis.","code":""},{"path":"/reference/orthologs_At_Os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-by-one orthologous genes of rice in Arabidopsis thaliana. — orthologs_At_Os","text":"","code":"orthologs_At_Os"},{"path":"/reference/orthologs_At_Os.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"One-by-one orthologous genes of rice in Arabidopsis thaliana. — orthologs_At_Os","text":"named vector 12013 character.","code":""},{"path":"/reference/orthologs_At_Zm.html","id":null,"dir":"Reference","previous_headings":"","what":"One-by-one orthologous genes of Zea mays in Arabidopsis thaliana. — orthologs_At_Zm","title":"One-by-one orthologous genes of Zea mays in Arabidopsis thaliana. — orthologs_At_Zm","text":"One--one orthologous genes Zea mays Arabidopsis thaliana, used cross-species scRNA-seq analysis.","code":""},{"path":"/reference/orthologs_At_Zm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-by-one orthologous genes of Zea mays in Arabidopsis thaliana. — orthologs_At_Zm","text":"","code":"orthologs_At_Zm"},{"path":"/reference/orthologs_At_Zm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"One-by-one orthologous genes of Zea mays in Arabidopsis thaliana. — orthologs_At_Zm","text":"named vector 11405 character.","code":""},{"path":"/reference/PMEThmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of PMET result — PMEThmp","title":"Heatmap of PMET result — PMEThmp","text":"Heatmap PMET result","code":""},{"path":"/reference/PMEThmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of PMET result — PMEThmp","text":"","code":"PMEThmp(PMETresult, topn = NULL, rownames.size = 5, colnames.size = 5)"},{"path":"/reference/PMEThmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of PMET result — PMEThmp","text":"PMETresult PMET result topn show top highly enriched pairs cluster rownames.size font size row names colnames.size font size column names","code":""},{"path":"/reference/processPMET.html","id":null,"dir":"Reference","previous_headings":"","what":"pre-process original PMET output and filter with PPI information — processPMET","title":"pre-process original PMET output and filter with PPI information — processPMET","text":"pre-process original PMET output filter PPI information","code":""},{"path":"/reference/processPMET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pre-process original PMET output and filter with PPI information — processPMET","text":"","code":"processPMET(PMETresult, PPIinfo = NULL, species = \"Arabidopsis thaliana\")"},{"path":"/reference/processPMET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pre-process original PMET output and filter with PPI information — processPMET","text":"PMETresult path original PMET output PPIinfo protein-protein interaction (PPI) information species species; currently Arabidopsis thaliana Oryza sativa Zea mays supported.","code":""},{"path":"/reference/processPMET.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pre-process original PMET output and filter with PPI information — processPMET","text":"","code":"if (FALSE) { PMETresult <- processPMET(PMETresult = \"output.txt\") }"},{"path":"/reference/ras_exp_hmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmaps showing mean regulon activity and TF expression of each cluster. — ras_exp_hmp","title":"Heatmaps showing mean regulon activity and TF expression of each cluster. — ras_exp_hmp","text":"Heatmaps showing mean regulon activity TF expression cluster.","code":""},{"path":"/reference/ras_exp_hmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmaps showing mean regulon activity and TF expression of each cluster. — ras_exp_hmp","text":"","code":"ras_exp_hmp(SeuratObj, rasMat, group.by = \"seurat_clusters\", assay = \"SCT\")"},{"path":"/reference/ras_exp_hmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmaps showing mean regulon activity and TF expression of each cluster. — ras_exp_hmp","text":"SeuratObj Seurat object rasMat matrix regulon activity score(RAS) cell group.Name metadata column group cells (example, seurat_clusters) assay assay calculate mean expression","code":""},{"path":"/reference/ras_exp_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimension reduction plot showing regulon activity and TF expression — ras_exp_scatter","title":"Dimension reduction plot showing regulon activity and TF expression — ras_exp_scatter","text":"Dimension reduction plot showing regulon activity TF expression","code":""},{"path":"/reference/ras_exp_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension reduction plot showing regulon activity and TF expression — ras_exp_scatter","text":"","code":"ras_exp_scatter(SeuratObj, rasMat, gene, reduction = \"umap\")"},{"path":"/reference/ras_exp_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimension reduction plot showing regulon activity and TF expression — ras_exp_scatter","text":"SeuratObj Seurat object rasMat matrix regulon activity score(RAS) cell gene TF show reduction umap tsne","code":""},{"path":"/reference/runCIBERSORT.html","id":null,"dir":"Reference","previous_headings":"","what":"modified version of original code(https://rdrr.io/github/veltenlab/rnamagnet/src/R/CIBERSORT.R). — runCIBERSORT","title":"modified version of original code(https://rdrr.io/github/veltenlab/rnamagnet/src/R/CIBERSORT.R). — runCIBERSORT","text":"modified version original code(https://rdrr.io/github/veltenlab/rnamagnet/src/R/CIBERSORT.R).","code":""},{"path":"/reference/runCIBERSORT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modified version of original code(https://rdrr.io/github/veltenlab/rnamagnet/src/R/CIBERSORT.R). — runCIBERSORT","text":"","code":"runCIBERSORT(   exprs,   base,   design,   markergenes = intersect(rownames(base), rownames(exprs)),   transform = function(x) x,   nu = c(0.25, 0.5, 0.75),   optim.nu = F,   mc.cores = 3,   ... )"},{"path":"/reference/RunGSEA_plant.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Gene Set Enrichment Analysis (GSEA) on Seurat object — RunGSEA_plant","title":"Perform Gene Set Enrichment Analysis (GSEA) on Seurat object — RunGSEA_plant","text":"Perform Gene Set Enrichment Analysis (GSEA) Seurat object. GSEA implemented using clusterProfiler package. function three plant species: Arabidopsis thaliana Oryza sativa Zea mays.","code":""},{"path":"/reference/RunGSEA_plant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Gene Set Enrichment Analysis (GSEA) on Seurat object — RunGSEA_plant","text":"","code":"RunGSEA_plant(   SeuratObj,   by = \"GO\",   TERM2GENE = NULL,   GeneIDtype = \"TAIR\",   minpct = 0 )"},{"path":"/reference/RunGSEA_plant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Gene Set Enrichment Analysis (GSEA) on Seurat object — RunGSEA_plant","text":"SeuratObj Seurat object GO KEGG. ignored parameter \"TERM2GENE\" NULL. TERM2GENE Customized terms. Annotation TERM GENE mapping, data.frame 2 column term gene. NULL default. NULL, parameter \"\" ignored. GeneIDtype Gene ID type Seurat object. TAIR Arabidopsis thaliana, example. minpct minimum expression percent cluster, parameter used filter Differential expression genes run GSEA. 0 default.","code":""},{"path":"/reference/RunGSEA_plant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Gene Set Enrichment Analysis (GSEA) on Seurat object — RunGSEA_plant","text":"Seurat object","code":""},{"path":"/reference/RunGSEA_plant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Gene Set Enrichment Analysis (GSEA) on Seurat object — RunGSEA_plant","text":"","code":"if (FALSE) { SeuratObj <- RunGSEA_plant(SeuratObj, by = 'GO', GeneIDtype = 'TAIR') }"},{"path":"/reference/RunMetacell.html","id":null,"dir":"Reference","previous_headings":"","what":"Run metacell on Seurat object — RunMetacell","title":"Run metacell on Seurat object — RunMetacell","text":"MetaCell R package facilitates analysis single cell RNA-seq UMI matrices computing partitions cell similarity graph small (~20-200 typically) homogeneous groups cells defined metacells (MCs). derived MCs used building different representations data, allowing matrix 2D graph visualization forming basis analysis cell types, subtypes, transcriptional gradients, cell-cycle variation, gene modules regulatory models . details usage MetaCell pipeline available package vignettes https://tanaylab.github.io/metacell/index.html. Note metacell package tested linux macbooks, currently compatible Windows.","code":""},{"path":"/reference/RunMetacell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run metacell on Seurat object — RunMetacell","text":"","code":"RunMetacell(SeuratObj, species)"},{"path":"/reference/RunMetacell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run metacell on Seurat object — RunMetacell","text":"SeuratObj Seurat object species species","code":""},{"path":"/reference/RunMonocle2.html","id":null,"dir":"Reference","previous_headings":"","what":"Run monocle2 on Seurat object — RunMonocle2","title":"Run monocle2 on Seurat object — RunMonocle2","text":"Run monocle2 Seurat object","code":""},{"path":"/reference/RunMonocle2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run monocle2 on Seurat object — RunMonocle2","text":"","code":"RunMonocle2(   SeuratObj,   max_components = 2,   root_clusters = NULL,   point_size = 0.5,   BEAM_analysis = FALSE,   BEAM_branch_point = 1,   save_plot = TRUE,   return_object = TRUE )"},{"path":"/reference/RunMonocle2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run monocle2 on Seurat object — RunMonocle2","text":"SeuratObj Seurat object max_components dimensionality reduced space. 2 default. root_clusters clusters selected root point_size point size scatter plot BEAM_analysis perform BEAM analysis . BEAM_branch_point ID branch point analyze. save_plot save plots pdf . return_object return CellDataSet object .","code":""},{"path":"/reference/RunMonocle2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run monocle2 on Seurat object — RunMonocle2","text":"parameter return_object = TRUE, CellDataSet object differential genes across pseudotime returned.","code":""},{"path":"/reference/RunSlingshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Run slingshot on Seurat object — RunSlingshot","title":"Run slingshot on Seurat object — RunSlingshot","text":"Run slingshot Seurat object","code":""},{"path":"/reference/RunSlingshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run slingshot on Seurat object — RunSlingshot","text":"","code":"RunSlingshot(   SeuratObj,   clusterlabel = \"seurat_clusters\",   reduction = \"UMAP\",   dynamic_genes = FALSE,   save_plot = TRUE,   return_object = TRUE )"},{"path":"/reference/RunSlingshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run slingshot on Seurat object — RunSlingshot","text":"SeuratObj Seurat object clusterlabel cluster labels reduction reduction dynamic_genes whether identify dynamic genes across pseudotime save_plot save plots pdf . return_object return object .","code":""},{"path":"/reference/RunSlingshot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run slingshot on Seurat object — RunSlingshot","text":"parameter return_object = TRUE, SingleCellExperiment object dynamic genes returned.","code":""},{"path":"/reference/species_percentage.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar plot showing the percentage of cells from different species. — species_percentage","title":"Bar plot showing the percentage of cells from different species. — species_percentage","text":"Bar plot showing percentage cells different species cross-species integration.","code":""},{"path":"/reference/species_percentage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar plot showing the percentage of cells from different species. — species_percentage","text":"","code":"species_percentage(SeuratObj, group_by = \"seurat_clusters\")"},{"path":"/reference/species_percentage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar plot showing the percentage of cells from different species. — species_percentage","text":"SeuratObj Seurat object. group_by column SeuratObj@meta.data.","code":""},{"path":"/reference/species_percentage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bar plot showing the percentage of cells from different species. — species_percentage","text":"ggplot ibject.","code":""},{"path":"/reference/SpecificityRank.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot plot showing top regulons of each cluster according to regulon specificity score(RSS) — SpecificityRank","title":"Dot plot showing top regulons of each cluster according to regulon specificity score(RSS) — SpecificityRank","text":"Dot plot showing top regulons cluster according regulon specificity score(RSS)","code":""},{"path":"/reference/SpecificityRank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot plot showing top regulons of each cluster according to regulon specificity score(RSS) — SpecificityRank","text":"","code":"SpecificityRank(rssMat, cluster, topn = 10)"},{"path":"/reference/SpecificityRank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot plot showing top regulons of each cluster according to regulon specificity score(RSS) — SpecificityRank","text":"rssMat matrix regulon specificity score(RSS) cluster cluster cluster show topn number top regulons draw","code":""},{"path":"/reference/topPairsNet.html","id":null,"dir":"Reference","previous_headings":"","what":"Network diagram showing top pairs of a cluster. — topPairsNet","title":"Network diagram showing top pairs of a cluster. — topPairsNet","text":"Network diagram showing top pairs cluster.","code":""},{"path":"/reference/topPairsNet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network diagram showing top pairs of a cluster. — topPairsNet","text":"","code":"topPairsNet(PMETresult, clus, topn = 20, nodeColor = \"#81BADA\")"},{"path":"/reference/topPairsNet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network diagram showing top pairs of a cluster. — topPairsNet","text":"PMETresult PMET result clus cluster topn number top highly enriched pairs cluster draw, 20 default. nodeColor color nodes","code":""},{"path":"/reference/topRegulons.html","id":null,"dir":"Reference","previous_headings":"","what":"Network diagram showing top regulons of each cluster — topRegulons","title":"Network diagram showing top regulons of each cluster — topRegulons","text":"Network diagram showing top regulons cluster according regulon specificity score(RSS).","code":""},{"path":"/reference/topRegulons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network diagram showing top regulons of each cluster — topRegulons","text":"","code":"topRegulons(   rssMat,   topn = 5,   from.size = 7,   to.size = 4,   from.label.cex = 1,   to.label.cex = 0.7 )"},{"path":"/reference/topRegulons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network diagram showing top regulons of each cluster — topRegulons","text":"rssMat matrix regulon specificity score(RSS) cluster topn number top regulons draw .size size 'cluster' nodes .size size 'regulon' nodes .label.cex label size 'cluster' nodes .label.cex label size 'regulon' nodes","code":""},{"path":"/reference/toptargets.html","id":null,"dir":"Reference","previous_headings":"","what":"Network diagram showing top targets of each regulon — toptargets","title":"Network diagram showing top targets of each regulon — toptargets","text":"Network diagram showing top targets regulon according importance score.","code":""},{"path":"/reference/toptargets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network diagram showing top targets of each regulon — toptargets","text":"","code":"toptargets(   tf_target,   topn = 5,   regulons = NULL,   tf.size = 7,   target.size = 4,   tf.label.cex = 1,   target.label.cex = 0.7 )"},{"path":"/reference/toptargets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network diagram showing top targets of each regulon — toptargets","text":"tf_target TF targets regulon. information comes post-processing pyscenic. topn number top targets draw regulons regulons show. NULL, show regulons. tf.size size TF nodes target.size size target nodes tf.label.cex label size TF nodes target.label.cex label size target nodes","code":""},{"path":"/reference/ToptargetsofTopregulons.html","id":null,"dir":"Reference","previous_headings":"","what":"Network diagram showing top targets of top regulons of each cluster — ToptargetsofTopregulons","title":"Network diagram showing top targets of top regulons of each cluster — ToptargetsofTopregulons","text":"regulator colored cluster belongs. Pie means regulon top regulon multiple clusters.","code":""},{"path":"/reference/ToptargetsofTopregulons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network diagram showing top targets of top regulons of each cluster — ToptargetsofTopregulons","text":"","code":"ToptargetsofTopregulons(rssMat, tf_target, Topregulons = 5, Toptargets = 5)"},{"path":"/reference/ToptargetsofTopregulons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network diagram showing top targets of top regulons of each cluster — ToptargetsofTopregulons","text":"rssMat matrix regulon specificity score(RSS) cluster tf_target TF targets regulon. information comes post-processing pyscenic. Topregulons number top regulons draw Toptargets number top targets draw","code":""},{"path":"/reference/triHmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw triangle heatmap of PMET result — triHmp","title":"Draw triangle heatmap of PMET result — triHmp","text":"Draw triangle heatmap PMET result","code":""},{"path":"/reference/triHmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw triangle heatmap of PMET result — triHmp","text":"","code":"triHmp(PMETresult, clus)"},{"path":"/reference/triHmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw triangle heatmap of PMET result — triHmp","text":"PMETresult PMET result clus cluster","code":""}]
